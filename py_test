import cv2
from ultralytics import YOLO
from sort.sort import *
# from util import *
from os import *

license_model = YOLO('models/runs/detect/train/weights/best.pt')

cap = cv2.VideoCapture(0)

counter = 0

output_dir = 'output_license'
os.makedirs(output_dir, exist_ok=True)

while cap.isOpened():
    # Read a frame from the video
    success, frame = cap.read()


    if success:
       

        # detecting license plates
        license_plate_detection = license_model.track(frame,persist=True)
        # print(license_plate_detection)
        if license_plate_detection:
            for  license_plate in license_plate_detection[0].boxes.data.tolist():
                print(license_plate) 
                x1, y1, x2, y2, score, class_id = license_plate

                #license plate crop
                plate_crop = frame[int(y1): int(y2), int(x1): int(x2)]

            
                # process license plate
                plate_crop_gray = cv2.cvtColor(plate_crop, cv2.COLOR_BGR2GRAY)
                _, plate_crop_thresh = cv2.threshold(plate_crop_gray, 64, 255, cv2.THRESH_BINARY_INV)

                # save 
                counter = counter+1
                output_filename = os.path.join(output_dir, f'license_threshold_{counter}.jpg')
                cv2.imwrite(output_filename, plate_crop_gray)

                # Visualize the results on the frame
                
                license_frame = license_plate_detection[0].plot()

                cv2.imshow("License plate", license_frame) #License plate


        # Break the loop if 'q' is pressedqq
        if cv2.waitKey(1) & 0xFF == ord("q"):
            break
    else:
        # Break the loop if the end of the video is reached
        break


# Release the video capture object and close the display window
cap.release()
cv2.destroyAllWindows()